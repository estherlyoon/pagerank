The only important script here is graphgen.cpp. You can ignore the python scripts, they do basically the same thing in more specific formats (but are much slower).

To compile graphgen.cpp:
	make graphgen

To generate a hex graph:
	./graphgen <#-vertices> <#-edges>

You can then use your to_bin.c script to convert to binary. The parameters input into the .json for benchmarking will be output to params.json

Notes:
- See top directory's README for specifics on memory layout
- The script only ensures that there's no src->src edges; it allows repeat edges (because it took way longer to generate a graph ensuring there were no repeats)
- To calculate file size in bytes from # of vertices and edges (or vice versa), use filesz = V*32 + E*8
	(16 bytes for each vertex in the first part of the graph + (8 for pagerank writeback * 2) + 8 bytes per edge)
